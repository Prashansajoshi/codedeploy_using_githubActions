# .github/workflows/deploy.yml
name: Deploy to AWS CodeDeploy

on:
    workflow_dispatch: 
    push:
      branches: [ "stage" ]
    pull_request:
      branches: [ "main" ] 

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
    AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }} 
    AWS_DEFAULT_REGION: us-east-1


jobs:
    build:

        runs-on: ubuntu-latest 
        steps:
        - uses: actions/checkout@v4
    
        - name: Configure aws credentials
          uses: aws-action/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
            aws-region: us-east-1

        - name: Run tests
          run: echo "Running tests..."
    
        - name: Echo Hello World
          run: aws sts get-caller-identity
    
        - name: Setup TerraformA
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_wrapper: false
    
        - name: Terraform Version
          run: echo "Terraform version=$(terraform --version)"
    
        - name: Terraform Init
          run: terraform init
          working-directory: terraform
    
        - name: Terraform Plan
          run: terraform plan
          working-directory: terraform
    
        # - name: Terraform Apply
        #   run: terraform apply -auto-approve
        #   working-directory: terraform 

        - name: Terraform Destroy
          run: terraform destroy -auto-approve
          working-directory: terraform 
    


    deploy:
        runs-on: ubuntu-latest 
        needs: build

        steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Configure aws credentials
          uses: aws-action/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
            aws-region: us-east-1


        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '16'  

        - name: Install dependencies
          run: npm install

        - name: Zip application
          run: zip -r deploy.zip . -x "*.git*"

        #   - name: Deploy to AWS CodeDeploy
        #     uses: aws-actions/aws-code-deploy-action@v1
        #     with:
        #       application-name: your-app-name
        #       deployment-group: your-deployment-group
        #       deployment-config-name: CodeDeployDefault.AllAtOnce
        #       revision-type: S3
        #       s3-bucket: your-bucket-name
        #       s3-key: deploy.zip
        #     env:
        #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #       AWS_REGION: ${{ secrets.AWS_REGION }}
